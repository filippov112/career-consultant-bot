# keyboards.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from quizzes_data import get_all_quizzes_info # get_all_quizzes_info —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏ max_score

def main_menu_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    keyboard = [
        [InlineKeyboardButton("üìö –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data='select_quiz')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", callback_data='get_info')],
        # [InlineKeyboardButton("üèÜ –ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data='my_results')], # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
    ]
    return InlineKeyboardMarkup(keyboard)

def select_quiz_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–∞.
    –¢–µ–ø–µ—Ä—å —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª –∑–∞ —Ç–µ—Å—Ç.
    """
    quizzes = get_all_quizzes_info()
    keyboard = []
    for quiz_info in quizzes:
        button_text = f"{quiz_info['name']} (–º–∞–∫—Å. {quiz_info['max_score']} –±–∞–ª–ª–æ–≤)"
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f'start_quiz_{quiz_info["id"]}')])

    if not keyboard:
        keyboard.append([InlineKeyboardButton("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤", callback_data='no_quizzes_available')])

    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')])
    return InlineKeyboardMarkup(keyboard)


def quiz_question_keyboard(options: list, question_index: int, quiz_id: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ —Ç–µ—Å—Ç–∞.
    'options' —Ç–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π: [{'text': '...', 'score': X}, ...]

    :param options: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –∏ –∏—Ö –±–∞–ª–ª–∞–º–∏.
    :param question_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0).
    :param quiz_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç–µ—Å—Ç–∞.
    :return: InlineKeyboardMarkup.
    """
    keyboard = []
    for i, option_data in enumerate(options):
        option_text = option_data.get("text", f"–í–∞—Ä–∏–∞–Ω—Ç {i+1}")
        # –ë–∞–ª–ª—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥—É–º–∞–Ω–æ
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –±–∞–ª–ª—ã: option_text = f"{option_data.get('text')} ({option_data.get('score', 0)}–±)"
        callback_data = f'ans_{quiz_id}_{question_index}_{i}'
        keyboard.append([InlineKeyboardButton(option_text, callback_data=callback_data)])
    return InlineKeyboardMarkup(keyboard)

def back_to_main_menu_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
    """
    keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data='main_menu')]]
    return InlineKeyboardMarkup(keyboard)